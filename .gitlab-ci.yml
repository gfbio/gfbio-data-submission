stages:
  - unit_tests
  - create_merge_request
  - test
  - check_for_web_test
  - stop_web_test
  - update_staging
  - update_production
  - deploy

run_unit_tests:
  stage: unit_tests
  script:
    - rm -r .envs && cp -r /home/gitlab-runner/.gfbio_envs/ .envs
    - docker-compose -f local.yml build
    - CURRENT_UID=$(id -u):$(id -g) docker stack deploy -c cicd/local.yml ${CI_COMMIT_REF_NAME}-tests
    - while [[ $(docker ps -a | grep ${CI_COMMIT_REF_NAME}-tests_django | grep Exited | wc -l) == 0 ]]; do sleep 1; done
    - docker logs $(docker ps -a | grep -oP "$CI_COMMIT_REF_NAME"-tests_django.+\s?)
    - if [[ $(docker logs $(docker ps -a | grep -oP "$CI_COMMIT_REF_NAME"-tests_django.+\s?) --tail 2 2>&1 | grep FAILED | wc -l) == 1 ]]; then docker stack rm ${CI_COMMIT_REF_NAME}-tests && exit 1; fi
    - docker stack rm ${CI_COMMIT_REF_NAME}-tests
  environment:
    name: review/$CI_COMMIT_REF_NAME
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^\d+-/'
  tags:
    - dev-denbi

create_merge_request:
  stage: create_merge_request
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^\d+-/'
  script:
    - HOST=${CI_PROJECT_URL} CI_PROJECT_ID=${CI_PROJECT_ID} CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} GITLAB_USER_ID=${GITLAB_USER_ID} PRIVATE_TOKEN=${PRIVATE_TOKEN} ./cicd/autoMergeRequest.sh
  tags:
    - dev-denbi

stop_web_test:
  stage: stop_web_test
  script:
    - python cicd/stopDockerStack.py "${CI_COMMIT_MESSAGE}"
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_COMMIT_MESSAGE =~ /.*Merge branch.*into.*/'
  tags:
    - dev-denbi

check_for_web_test:
  stage: check_for_web_test
  script:
    - ADMIN_NICKNAME=${ADMIN_NICKNAME} ADMIN_EMAIL=${ADMIN_EMAIL} ADMIN_PASSWORD=${ADMIN_PASSWORD} HOST=${CI_PROJECT_URL} CI_PROJECT_ID=${CI_PROJECT_ID} CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} GITLAB_USER_ID=${GITLAB_USER_ID} PRIVATE_TOKEN=${PRIVATE_TOKEN} ./cicd/createWebTest.sh
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_COMMIT_REF_NAME.submissions.gfbio.dev/accounts/login
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^\d+-/'
  tags:
    - dev-denbi
#
#
update_staging:
  stage: update_staging
  script:
    - ./cicd/updateStaging.sh
  environment:
    name: staging
    url: https://submissions.gfbio.dev/
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  tags:
    - staging-denbi

deploy_to_production:
  stage: update_production
  script:
    - HOST=${CI_PROJECT_URL} CI_PROJECT_ID=${CI_PROJECT_ID} PRIVATE_TOKEN=${PRIVATE_TOKEN} cicd/tagReleaseCheck.sh
  environment:
    name: production
    url: https://submissions.gfbio.org
  rules:
    - if: '$CI_COMMIT_TAG'
  tags:
    - production
