include:
  - project: gfbio/cicd
    file:
      - ".create_merge_request_v3.yml"
      - ".tag_release.yml"
      - ".web_test_v2.yml"

stages:
  - create_merge_request
  - unit_tests
  - web_test_check
  - web_test_update
  - web_test_stop
  - update_staging
  - tag_release_check
  - tag_release

create_merge_request:
  variables:
    PROJECT_NAME: "submissions"
  tags:
    - dev-denbi

run unit tests:
  stage: unit_tests
  rules:
    - if: $CI_COMMIT_BRANCH
  script:
    - docker compose -f cicd/local.yml build
    - docker stack deploy -c cicd/local.yml ${CI_COMMIT_REF_NAME}-tests
    - while [[ $(docker ps -a | grep ${CI_COMMIT_REF_NAME}-tests_django | grep Exited | wc -l) == 0 ]]; do sleep 1; done
    - docker logs $(docker ps -a | grep -oP "$CI_COMMIT_REF_NAME"-tests_django.+\s?)
    - if [[ $(docker logs $(docker ps -a | grep -oP "$CI_COMMIT_REF_NAME"-tests_django.+\s?) --tail 2 2>&1 | grep FAILED | wc -l) == 1 ]]; then docker stack rm ${CI_COMMIT_REF_NAME}-tests && exit 1; fi
    - docker stack rm ${CI_COMMIT_REF_NAME}-tests
  after_script:
    - docker compose -f cicd/local.yml run --rm django rm -r staticfiles
    - docker compose -f cicd/local.yml down
  environment:
    name: review/$CI_COMMIT_REF_NAME
  tags:
    - dev-denbi

web_test_update:
  variables:
    PROJECT_NAME: "submissions"
    COMPOSE_FILE: "web-test.yml"
  script:
    - ISSUE_ID=$(awk -F- '{print $2}' <<< ${CI_COMMIT_REF_NAME})
    - TEST_NAME=$ISSUE_ID-$PROJECT_NAME
    - export NVM_DIR="$HOME/.nvm"
    - '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'
    - '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"'
    - rm -r .envs && cp -r /home/gitlab-runner/.gfbio_envs/ .envs
    - nvm use 8
    - cd userinterface && npm i && npm run collect-ci
    - cd ../
    - nvm use default
    - cp gfbio_submissions/templates/account/webtest_login.html gfbio_submissions/templates/account/login.html
    - sed -i s/ISSUE_ID/$TEST_NAME/g web-test.yml
    - sed -i "s/VERSION =.*/VERSION ='$(git describe --tags | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')'/g" config/settings/base.py
    - sed -i s/DJANGO_ALLOWED_HOSTS=.*/DJANGO_ALLOWED_HOSTS=\.test\.gfbio\.dev/g .envs/.production/.django
    - sed -i s/HOST_URL_ROOT=.*/HOST_URL_ROOT=https:\/\/$TEST_NAME\.test\.gfbio\.dev/g .envs/.production/.django
    - sed -i 's/DJANGO_ADMIN_URL=.*\//DJANGO_ADMIN_URL='"$ADMIN_URL"'/g' .envs/.production/.django
    - sed -i s/EMDATE/$(date +%Y-%m-%d -d "+ 365 days")/g cicd/test_data.json
    - docker compose -f $COMPOSE_FILE build
    - ./web_test_deploy.sh

web_test_stop:
  variables:
    MAIN_BRANCH_NAME: "master"
    PROJECT_NAME: "submissions"

update staging:
  stage: update_staging
  needs: ["run unit tests"]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - export NVM_DIR="$HOME/.nvm"
    - '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'
    - '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"'
    - rm -r .envs && cp -r /home/gitlab-runner/.gfbio_envs/ .envs
    - nvm use 8
    - cd userinterface && npm i && npm run collect-ci
    - cd ../
    - nvm use default
    - >
      sed -i "s/tag: 'GFBio Django'/tag: 'GFBio Django v$(git describe --tags | egrep -o '[0-9]+\.[0-9]+\.?[0-9]{0,}')'/g" staging.yml
    - docker compose -f staging.yml build
    - docker compose -f staging.yml up -d postgres
    - docker compose -f staging.yml run --rm postgres backup
    - docker compose -f staging.yml run --rm django python manage.py migrate
    - docker compose -f staging.yml down
    - docker compose -f staging.yml up -d
  environment:
    name: staging
    url: https://submissions.gfbio.dev/
  tags:
    - staging-denbi

tag_release_check:
  variables:
    MAIN_BRANCH_NAME: "master"
  tags:
    - development-denbi

tag_release:
  variables:
    GIT_SUBMODULE_STRATEGY: normal
  script:
    - HOST=${CI_PROJECT_URL} CI_PROJECT_ID=${CI_PROJECT_ID} PRIVATE_TOKEN=${PRIVATE_TOKEN} cicd/tagRelease.sh
  environment:
    name: production
    url: https://submissions.gfbio.org
  tags:
    - production
