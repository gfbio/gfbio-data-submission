version: "3"

volumes:
  gfbio-ISSUE_ID:
    external: true

networks:
  local:
  internalProxy:
    external:
      name: internalProxy

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: gfbio_submissions_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    networks:
      - local
      - internalProxy
    logging:
      driver: syslog
      options:
        tag: "GFBio-django"
    deploy:
      mode: global
    restart: always
    volumes:
      - gfbio-ISSUE_ID:/app/gfbio_submissions/media
    labels:
      - traefik.enable=true
      - traefik.http.routers.BRANCH-django.rule=Host(`BRANCH.test.gfbio.dev`)
      - traefik.http.routers.BRANCH-django.entrypoints=web
      - traefik.http.middlewares.ISSUE_ID_headers.headers.hostsproxyheaders=X-CSRFToken
      - traefik.http.services.BRANCH-django.loadbalancer.server.port=5000
    command: /ci_start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: gfbio_submissions_production_postgres
    networks:
      - local
    env_file:
      - ./.envs/.production/.postgres
    restart: always

  redis:
    image: redis:6
    networks:
      - local
    restart: always

  celeryworker:
    <<: *django
    image: gfbio_submissions_production_celeryworker
    networks:
      - local
    logging:
      driver: syslog
      options:
        tag: "GFBio-celery-worker"
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: gfbio_submissions_production_celerybeat
    networks:
      - local
    logging:
      driver: syslog
      options:
        tag: "GFBio-celery-beat"
    command: /start-celerybeat

  flower:
    <<: *django
    image: gfbio_submissions_production_flower
    networks:
      - local
    logging:
      driver: syslog
      options:
        tag: "GFBio-flower"
    command: /start-flower
