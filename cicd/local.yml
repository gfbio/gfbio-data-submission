version: '3.7'

services:
  django: &django
    build:
      context: .
      dockerfile: ../compose/local/django/Dockerfile
    image: gfbio_submissions_local_django
    container_name: django
    depends_on:
      - postgres
    user: ${CURRENT_UID}
    deploy:
      restart_policy:
        condition: none
        max_attempts: 0
    volumes:
      - ..:/app
    env_file:
      - ../.envs/.local/.django
      - ../.envs/.local/.postgres
    command: >
      /bin/sh -c "python /app/manage.py collectstatic --noinput
      && python /app/manage.py migrate
      && python /app/manage.py test"

  postgres:
    build:
      context: .
      dockerfile: ../compose/production/postgres/Dockerfile
    image: gfbio_submissions_production_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ../.envs/.local/.postgres

  redis:
    image: redis:5.0
    container_name: redis

  celeryworker:
    <<: *django
    image: gfbio_submissions_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres

    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: gfbio_submissions_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres

    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: gfbio_submissions_local_flower
    container_name: flower
    ports:
      - "5555:5555"
    command: /start-flower
