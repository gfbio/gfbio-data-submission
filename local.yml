version: "3.2"

volumes:
  local_postgres_data: { }
  local_postgres_data_backups: { }
  django_media: { }

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: gfbio_submissions_local_django
    container_name: django
    cap_add:
      - SYS_ADMIN
    devices:
        - /dev/fuse
    security_opt:
        - apparmor:unconfined
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app:z
      - django_media:/app/gfbio_submissions/media
      - type: tmpfs
        target: /mnt/s3bucket
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: gfbio_submissions_production_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    ports:
      - "5444:5432"


  docs:
    image: gfbio_submissions_local_docs
    container_name: gfbio_submissions_local_docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    environment:
      - USE_DOCKER=yes
      - IPYTHONDIR=/app/.ipython
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./gfbio_submissions:/app/gfbio_submissions:z
    ports:
      - "9000:9000"
    command: /start-docs

  redis:
    image: redis:5.0
    container_name: redis

  celeryworker:
    <<: *django
    image: gfbio_submissions_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres

    ports: []
    command: /start-celeryworker

  celery-transfer-worker:
    <<: *django
    image: gfbio_submissions_local_celeryworker
    container_name: celery-transfer-worker
    depends_on:
      - redis
      - postgres

    ports: [ ]
    command: /start-celery-transfer-worker

  celeryworkerbackup:
    <<: *django
    image: gfbio_submissions_local_celeryworker_backup
    container_name: celeryworker_backup
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworkerbackup

  celerybeat:
    <<: *django
    image: gfbio_submissions_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres

    ports: []
    command: /start-celerybeat

  # flower:
  #   <<: *django
  #   image: gfbio_submissions_local_flower
  #   container_name: flower
  #   ports:
  #     - "5555:5555"
  #   command: /start-flower
