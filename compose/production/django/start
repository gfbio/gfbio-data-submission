#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

python /app/manage.py collectstatic --noinput

echo "VARIABLES in production start script"
echo "$DJANGO_AWS_STORAGE_BUCKET_NAME"
echo "$DJANGO_S3FS_MOUNT_POINT"
echo "$DJANGO_AWS_S3_ENDPOINT_URL"
echo "mount with s3fs via s3fs $DJANGO_AWS_STORAGE_BUCKET_NAME $DJANGO_S3FS_MOUNT_POINT -o passwd_file=/etc/passwd-s3fs -o use_path_request_style -o url=$DJANGO_AWS_S3_ENDPOINT_URL"

whoami
groups

ls -l /mnt/
ls -l /mnt/s3bucket

# Ensure /mnt/s3bucket exists and is owned by the Django user
mkdir -p "$DJANGO_S3FS_MOUNT_POINT"
chown django:django "$DJANGO_S3FS_MOUNT_POINT"
chmod 0770 "$DJANGO_S3FS_MOUNT_POINT"


s3fs "$DJANGO_AWS_STORAGE_BUCKET_NAME" "$DJANGO_S3FS_MOUNT_POINT" -o passwd_file=/etc/passwd-s3fs -o use_path_request_style -o url="$DJANGO_AWS_S3_ENDPOINT_URL"
# s3fs "$DJANGO_AWS_STORAGE_BUCKET_NAME" "$DJANGO_S3FS_MOUNT_POINT" -o passwd_file=/etc/passwd-s3fs -o use_path_request_style -o allow_other -o url="$DJANGO_AWS_S3_ENDPOINT_URL"

exec /usr/local/bin/gunicorn config.wsgi --bind 0.0.0.0:5000 --chdir=/app
